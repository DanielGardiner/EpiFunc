% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tab_all.R
\name{tab_all}
\alias{tab_all}
\title{Tabulate all variables}
\usage{
tab_all(data, var = NULL, by = NULL, complete = FALSE,
  arrange.factor.by = "value", show.percentage = "column",
  show.na.percentage = TRUE, row.break.value = " ", trunc.length = 60,
  n.decimals = 0, plotit = FALSE)
}
\arguments{
\item{data}{a data.frame}

\item{var}{a character specifying the variable to tabulate, if set to NULL the first variable will be used}

\item{by}{a character specifying the variable to stratify by, if set to NULL no stratification will be used}

\item{complete}{a logical specifying whether to use all levels for factor variables}

\item{arrange.factor.by}{a character with value either "level" or "value" describing how a factor variable should be ordered}

\item{show.percentage}{a character either 'column' or 'row' or NULL to indicate whether to show percentages in output}

\item{show.na.percentage}{a logical specifying whether to show percentages for NA values}

\item{row.break.value}{a character specifying the value to use as row breaks}

\item{trunc.length}{a numeric specifying the maximum character length to be shown in the output}

\item{n.decimals}{a numeric specifying the number of decimal places to show}

\item{plotit}{a logical specifying whether to plot the output}
}
\value{
either (1) a data.frame or (2) a list including a data.frame and a ggplot figure
}
\description{
Tabulate all variables
}
\examples{

# set dummy data

set.seed(4)

data = data.frame(onset.date = sample(seq(as.Date("2017-01-01"), as.Date("2018-06-01"), 1), 200, replace = TRUE),
                  sex = factor(c("M", "M", "F", NA, NA), c("F", "M", "Unk")),
                  age = sample(c(0:100), 200, replace = TRUE),
                  conf = sample(c("Confirmed", "Probable", "Probable"), 200, replace = TRUE),
                  status = sample(c("Student", "Staff", NA), 200, replace = TRUE),
                  geog = sample(c("South", "North", NA), 200, replace = TRUE))

# apply function

tab_all(data, var = c("sex", "age", "onset.date", "geog"))

tab_all(data, var = c("sex", "age", "onset.date", "geog"), by = "conf")

# using dplyr syntax

data \%>\%
  select(conf, sex, onset.date, geog) \%>\%
  tab_all(by = "conf")

data \%>\%
  select(conf, sex, onset.date, geog) \%>\%
  tab_all(by = "conf",
          show.percentage = "row",
          row.break.value = "_____")

data \%>\%
  select(conf, sex, onset.date, geog) \%>\%
  tab_all(by = "conf",
          show.percentage = "row",
          plotit = TRUE)

}
\author{
Daniel Gardiner (daniel.gardiner@phe.gov.uk)
}
