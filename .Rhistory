devtools::load_all(".")
usethis::use_package("ggplot2")
library(ggplot2)
library(scales)
usethis::use_package("ggplot2")
usethis::use_package("scales")
usethis::use_package("ggplot2")
install.packages("ggplot2")
usethis::use_package("ggplot2")
install.packages("EpiFunc")
data = data.frame(sex = sample(c("Male", "Female", "Unknown"), 200, replace = T),
age = sample(c(NA, 1:100), 200, replace = T))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = T)
data
set.seed(1)
data = data.frame(sex = sample(c("Male", "Female", "Unknown"), 200, replace = T),
age = sample(c(NA, 1:100), 200, replace = T))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = T)
data
set.seed(5)
data = data.frame(sex = sample(c("Male", "Female", "Unknown"), 200, replace = T),
age = sample(c(NA, 1:100), 200, replace = T))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = T)
data
age.sex.pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = NULL,
lower.limit = -25, upper.limit = 30, col.pal = 4)
set.seed(5)
data = data.frame(sex = sample(c("Male", "Female", "Unknown"), 200, replace = T),
age = sample(c(NA, 1:100), 200, replace = T),
status = sample(c("Confirmed", "Probable"), 200, replace = T))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = T)
age.sex.pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = NULL,
lower.limit = -25, upper.limit = 30, col.pal = 4)
age.sex.pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = NULL, col.pal = 4)
age.sex.pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = NULL)
age.sex.pyramid(data, age.grp.col = "age.grp", sex.col = "sex", split.by = "status",
lower.limit = -50, upper.limit = 40, col.pal = 4)
age.sex.pyramid(data, age.grp.col = "age.grp", sex.col = "sex", split.by = "status")
version(testthat)
version
tile_plot = function(data, x.col, y.col, x.lab = "", y.lab = "", text = FALSE,
colour = "red", label.breaks = 0, rescale.by.row = FALSE,
keep.row.order = FALSE){
# convert to data frame
data = as.data.frame(data)
# assign x and y columns
data$y = data[, y.col]
data$x = data[, x.col]
# tabulate cases by laboratory by week
temp = as.data.frame.array(xtabs(~ y + x, data,
drop.unused.levels = FALSE))
# order data
if(keep.row.order){
NULL
} else {
temp = temp[order(apply(temp, 1, sum)), ]
}
# add y column
temp$y = row.names(temp)
temp.factor = rev(unique(temp$y))
# melt the dataset
temp = melt(temp, id.vars = "y")
temp$y = factor(temp$y,
levels = temp.factor)
temp$rescale = temp$value
if(rescale.by.row)  temp = temp %>% group_by(y) %>% mutate(rescale = rescale(value))
# plot temp2
p = ggplot(temp, aes(x = variable, y = y, size = rescale, fill = rescale))
p = p + geom_tile(colour = "white", size = 1)
if(text) p = p + geom_text(aes(label = value), vjust = 0.4, size = 4, colour = "black")
p = p + ylab(y.lab)
p = p + xlab(x.lab)
p = p + theme(title = element_text(size = 16, colour = "black", face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0, size = 10,
colour = "black"),
axis.text.y = element_text(hjust = 1, size = 9,
colour = "black"),
legend.text= element_text(hjust = 1, size = 16,
colour = "black", face="bold"),
axis.title = element_text(size=16, face="bold"),
strip.text.y = element_text(hjust = 1, size = 16,
colour = "black", face="bold"),
legend.position="bottom",
panel.border = element_rect(colour = "grey", fill = NA),
panel.background = element_blank())
p = p + scale_fill_continuous(low = "white", high = colour)
p = p + scale_x_discrete(breaks = levels(temp$variable)[c(T, rep(F, label.breaks))],
drop=FALSE)
p = p + theme(legend.position="none")
p
}
set.seed(3)
data = data.frame(geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna", "Salzburg", "Innsbruck", "Graz", "Graz", "Linz", "Klagenfurt", "Villach"), 5000, replace = TRUE),
age.group = sample(c("0-19", "20-39", "40-59", "60+", "60+"), 5000, replace = TRUE),
week = factor(sample(paste0("week.", 1:30), 5000, replace = TRUE),
levels = paste0("week.", 1:30)))
# example plot (1)
tile_plot(data, x.col = "week", y.col = "geog",
x.lab = "Week", y.lab = "Geography", text = FALSE, colour = "red",
label.breaks = 0,
rescale.by.row = FALSE, keep.row.order = TRUE)
library(ggplot2)
library(ggplot2)
library(reshape2)
library(scales)
library(dplyr)
tile_plot(data, x.col = "week", y.col = "geog",
x.lab = "Week", y.lab = "Geography", text = FALSE, colour = "red",
label.breaks = 0,
rescale.by.row = FALSE, keep.row.order = TRUE)
set.seed(3)
data = data.frame(geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna", "Salzburg", "Innsbruck", "Graz", "Graz", "Linz", "Klagenfurt", "Villach"), 5000, replace = TRUE),
age.group = sample(c("0-19", "20-39", "40-59", "60+", "60+"), 5000, replace = TRUE),
week = factor(sample(paste0("week.", 1:30), 5000, replace = TRUE),
levels = paste0("week.", 1:30)))
# example plot 1
tile_plot(data, x.col = "week", y.col = "geog",
x.lab = "Week", y.lab = "Geography", text = FALSE, colour = "red",
label.breaks = 0,
rescale.by.row = FALSE, keep.row.order = TRUE)
tile_plot(data, x.col = "week", y.col = "geog",
x.lab = "Week", y.lab = "Geography", text = FALSE, colour = "red",
label.breaks = 3,
rescale.by.row = FALSE, keep.row.order = TRUE)
tile_plot(data, x.col = "week", y.col = "geog",
x.lab = "Week", y.lab = "Geography", text = FALSE, colour = "red",
label.breaks = 0,
rescale.by.row = FALSE, keep.row.order = TRUE)
tile_plot(data, x.col = "week", y.col = "geog")
tile_plot(data, x.col = "week", y.col = "geog", text = TRUE)
tile_plot(data, x.col = "week", y.col = "geog", text = TRUE, colour = "orange")
tile_plot(data, x.col = "week", y.col = "geog", text = TRUE, colour = "orange",
label.breaks = 2)
tile_plot(data, x.col = "week", y.col = "geog", text = TRUE, label.breaks = 2)
tile_plot(data, x.col = "week", y.col = "geog", text = TRUE, label.breaks = 2,
rescale.by.row = TRUE)
tile_plot(data, x.col = "week", y.col = "geog")
tile_plot(data, x.col = "week", y.col = "geog", keep.row.order = TRUE)
tile_plot(data, x.col = "week", y.col = "geog", keep.row.order = TRUE)
tile_plot(data, x.col = "week", y.col = "geog", keep.row.order = FALSE)
tile_plot(data, x.col = "week", y.col = "geog", text = TRUE)
tile_plot(data, x.col = "week", y.col = "geog", text = TRUE, label.breaks = 2)
tile_plot(data, x.col = "week", y.col = "geog", text = TRUE, label.breaks = 2,
rescale.by.row = TRUE)
?EpiFunc
