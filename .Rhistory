# set dummy data
set.seed(2)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = c("Male", "Female"),
conf = sample(c("Confirmed", "Probable", "possible"), 200, replace = TRUE),
status = sample(c("Student", "Staff"), 200, replace = TRUE))
data$dates.year.month = factor(format(data$dates, "%Y_%m"),
levels = unique(format(seq(min(data$dates),
max(data$dates), 1), "%Y_%m")))
# use function
epicurve(data, date.col = "dates", time.period = "iso.year.week",
fill.by="sex", split.by=NULL, shade.by=NULL,
start.at = "2014-08-01", stop.at = "2015-06-28",
xlab="Year week", ylab="Count",
fill.by.legend.title = "Sex", shade.by.legend.title = NULL, angle=90,
col.pal="phe", label.breaks = 1, epi.squares = TRUE, blank.background = TRUE,
na.rm = TRUE)
epicurve(x = data, date.col = "dates.year.month", time.period = "use.date.col.as.is",
fill.by="status", split.by=NULL, shade.by=NULL,
start.at = "2015-02-01", stop.at = "2015-06-22",
xlab="Year_week", ylab="Count",
fill.by.legend.title = "", shade.by.legend.title = NULL, angle=90,
col.pal=1, label.breaks = 0, epi.squares = FALSE, na.rm = TRUE)
epicurve(data, date.col = "dates", time.period = "year.quarter",
fill.by="sex", split.by=NULL, shade.by=NULL,
start.at = "2014-01-01", stop.at = "2015-06-22",
xlab=NULL, ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL, angle=90,
col.pal=8, label.breaks = 0, epi.squares = FALSE, na.rm = TRUE)
epicurve(data, date.col = "dates", time.period = "year.month",
fill.by="sex", split.by=NULL, shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-01-31",
xlab=NULL, ylab="Count",
fill.by.legend.title = "Sex", shade.by.legend.title = NULL, angle=90,
col.pal=2, label.breaks = 0, epi.squares = FALSE, na.rm = FALSE)
epicurve(data, date.col = "dates", time.period = "year.month",
fill.by="sex", split.by=NULL, shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-01-31",
xlab=NULL, ylab="Count",
fill.by.legend.title = "Sex", shade.by.legend.title = NULL, angle=90,
col.pal=2, label.breaks = 0, epi.squares = FALSE, na.rm = FALSE)
epicurve(data, date.col = "dates", time.period = "day",
fill.by="sex", split.by=NULL, shade.by=NULL,
start.at = "2014-01-01", stop.at = "2014-02-19",
xlab=NULL, ylab="Count", fill.by.legend.title = NULL, angle=90,
col.pal=4, label.breaks = 3, epi.squares = FALSE, na.rm = TRUE)
epicurve(data, date.col = "dates", time.period = "day",
fill.by="sex", split.by=NULL, shade.by=NULL,
start.at = "2014-01-01", stop.at = "2014-02-19",
xlab=NULL, ylab="Count", fill.by.legend.title = NULL, angle=90,
col.pal=4, label.breaks = 0, epi.squares = FALSE, na.rm = TRUE)
epicurve(data, date.col = "dates", time.period = "day",
fill.by="sex", split.by=NULL, shade.by=NULL,
start.at = "2014-01-01", stop.at = "2014-02-19",
xlab=NULL, ylab="Count", fill.by.legend.title = NULL, angle=90,
col.pal=4, label.breaks = 1, epi.squares = FALSE, na.rm = TRUE)
epicurve(data, date.col = "dates.year.month", time.period = "use.date.col.as.is",
fill.by="sex", split.by=NULL, shade.by=NULL,
start.at = "2014-01-01", stop.at = "2014-02-19",
xlab=NULL, ylab="Count", fill.by.legend.title = NULL, angle=90,
col.pal=4, label.breaks = 3, epi.squares = FALSE, na.rm = TRUE)
epicurve(data, date.col = "dates.year.month", time.period = "use.date.col.as.is",
fill.by="sex", split.by=NULL, shade.by=NULL,
start.at = "2014-01-01", stop.at = "2014-02-19",
xlab=NULL, ylab="Count", fill.by.legend.title = NULL, angle=90,
col.pal=4, label.breaks = 0, epi.squares = FALSE, na.rm = TRUE)
epicurve(data, date.col = "dates", time.period = "month",
fill.by="conf", split.by="conf", shade.by="sex",
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab=NULL, ylab="Count",
fill.by.legend.title = "Confirmed status", shade.by.legend.title = "Sex",
angle=0, col.pal="phe", label.breaks = 0, epi.squares = TRUE, na.rm = TRUE)
epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL, angle=0,
col.pal=7, label.breaks = 0, epi.squares = TRUE, na.rm = TRUE)
?epicurve
?EpiFunc::epicurve()
install.packages("httr")
httr::set_config(httr::config(ssl_verifypeer =0L))
devtools::install_github("DanielGardiner/EpiFunc")
library(EpiFunc)
?epicurve()
library(EpiFunc)
?epicurve()
library(outbreaks)
library(epicontacts)
names(mers_korea_2015)
#> [1] "linelist" "contacts"
dim(mers_korea_2015$linelist)
#> [1] 162  15
dim(mers_korea_2015$contacts)
#> [1] 98  4
mers_korea_2015
mers_korea_2015
x <- make_epicontacts(linelist = mers_korea_2015$linelist,
contacts = mers_korea_2015$contacts,
directed = TRUE)
x
class(x)
plot(x, selector = FALSE)
plot(x, "sex", col_pal = spectral)
devtools::load_all()
# set dummy data
set.seed(2)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = c("Male", "Female"),
conf = sample(c("Confirmed", "Probable", "possible"), 200, replace = TRUE),
status = sample(c("Student", "Staff"), 200, replace = TRUE))
data$dates.year.month = factor(format(data$dates, "%Y_%m"),
levels = unique(format(seq(min(data$dates),
max(data$dates), 1), "%Y_%m")))
# use function
epicurve(data, date.col = "dates", time.period = "iso.year.week",
fill.by="sex", split.by=NULL, shade.by=NULL,
start.at = "2014-08-01", stop.at = "2015-06-28",
xlab="Year week", ylab="Count",
fill.by.legend.title = "Sex", shade.by.legend.title = NULL, angle=90,
col.pal="phe", label.breaks = 1, epi.squares = TRUE, blank.background = TRUE,
na.rm = TRUE)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable", "possible"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
status = sample(c("Confirmed", "Probable"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
data
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable", "possible"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
status = sample(c("Confirmed", "Probable"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable", "possible"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
status = sample(c("Confirmed", "Probable"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
na.rm = TRUE)
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE)
geog
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable", "possible"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
status = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
data
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable", "possible"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
status = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = NULL)
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf")
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf")
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = NULL)
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf")
format(data$dates, "%w")
format(data$dates, "%w-%Y")
format(data$dates, "%m-%Y")
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
data$month.year = format(data$dates, "%m-%Y")
tile_plot(data, x.col = "month.year", y.col = "geog", keep.row.order = TRUE)
tile_plot(data, x.col = "month.year", y.col = "geog", text = TRUE,
keep.row.order = TRUE)
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
data$month = format(data$dates, "%m")
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
na.rm = TRUE)
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf")
tile_plot(data, x.col = "month.year", y.col = "geog", text = TRUE,
keep.row.order = TRUE)
tile_plot(data, x.col = "month", y.col = "geog", text = TRUE,
keep.row.order = TRUE)
tile_plot
tile_plot(data, x.col = "month", y.col = "geog", text = TRUE,
keep.row.order = TRUE,  keep.row.order = FALSE)
tile_plot(data, x.col = "month", y.col = "geog", text = TRUE,
keep.row.order = FALSE)
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
data$month = format(data$dates, "%m")
# plot epicurve
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
na.rm = TRUE)
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf")
EpiFunc::tile_plot(data, x.col = "month", y.col = "geog", text = TRUE,
keep.row.order = FALSE)
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
col.pal=7, label.breaks = 0, epi.squares = TRUE,
na.rm = TRUE)
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal="phe", label.breaks = 0, epi.squares = TRUE,
na.rm = TRUE)
devtools::load_all()
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
data$month = format(data$dates, "%m")
# plot epicurve
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
na.rm = TRUE)
# plot age-sex pyramid
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf")
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf", col.pal = "phe")
devtools::load_all()
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf", col.pal = "phe")
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf", col.pal = "phe", blank.background = TRUE)
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
data$month = format(data$dates, "%m")
# plot epicurve
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
na.rm = TRUE)
# set dummy data
set.seed(5)
data = data.frame(dates = sample(seq(as.Date('2014-01-01'), as.Date('2016-04-01'), by="day"), 200, replace = TRUE),
sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
conf = sample(c("Confirmed", "Probable"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
geog = sample(c("Vienna", "Vienna", "Vienna", "Vienna",
"Salzburg", "Innsbruck", "Graz", "Graz",
"Linz", "Klagenfurt", "Villach"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
data$month = format(data$dates, "%m")
# plot epicurve
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
blank.background = TRUE, na.rm = TRUE)
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf", col.pal = "phe")
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf", col.pal = "phe",
blank.background = TRUE)
EpiFunc::tile_plot(data, x.col = "month", y.col = "geog", text = TRUE,
keep.row.order = FALSE)
devtools::load_all()
EpiFunc::tile_plot(data, x.col = "month", y.col = "geog", text = TRUE,
keep.row.order = FALSE)
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
blank.background = TRUE, na.rm = TRUE)
setwd("C:/Users/daniel.gardiner/Downloads")
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
blank.background = TRUE, na.rm = TRUE) %>% ggsave("epicurve1.png")
library(magrittr)
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
blank.background = TRUE, na.rm = TRUE) %>% ggsave("epicurve1.png")
library(ggplot2)
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
blank.background = TRUE, na.rm = TRUE) %>% ggsave("epicurve1.png")
EpiFunc::epicurve(data, date.col = "dates", time.period = "month",
fill.by="sex", split.by="conf", shade.by=NULL,
start.at = "2014-01-01", stop.at = "2016-04-20",
xlab="Month", ylab="Count",
fill.by.legend.title = NULL, shade.by.legend.title = NULL,
angle=0, col.pal=7, label.breaks = 0, epi.squares = TRUE,
blank.background = TRUE, na.rm = TRUE)
ggsave("epicurve1.png")
ggsave("agesexpyramid1.png")
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex",
split.by = "conf", col.pal = "phe",
blank.background = TRUE)
ggsave("agesexpyramid1.png")
EpiFunc::tile_plot(data, x.col = "month", y.col = "geog", text = TRUE,
keep.row.order = FALSE)
ggsave("tileplot1.png")
EpiFunc::tile_plot(data, x.col = "month", y.col = "geog", text = TRUE,
x.lab = "Month", y.lab = "Geography", keep.row.order = FALSE)
ggsave("tileplot1.png")
data = data.frame(sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
status = sample(c("Confirmed", "Probable"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 5, 15, 25, 45, 65, Inf),
include.lowest = TRUE)
data$age.grp
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 5, 15, 25, 45, 65, Inf),
include.lowest = TRUE, right = TRUE)
data
data[,c("age, age.grp")] %>% table
table(data[,c("age, age.grp")])
data[,c("age, age.grp")]
table(data[,c("age", "age.grp")])
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 5, 15, 25, 45, 65, Inf),
include.lowest = TRUE, right = FALSE)
table(data[,c("age", "age.grp")])
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 5, 15, 25, 45, 65, Inf),
include.lowest = TRUE, right = TRUE)
table(data[,c("age", "age.grp")])
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 5, 15, 25, 45, 65, Inf),
include.lowest = TRUE)
table(data[,c("age", "age.grp")])
devtools::install_github("DanielGardiner/EpiFunc")
install.packages("httr")
httr::set_config(httr::config(ssl_verifypeer =0L))
devtools::install_github("DanielGardiner/EpiFunc")
install.packages("httr")
httr::set_config(httr::config(ssl_verifypeer =0L))
devtools::install_github("DanielGardiner/EpiFunc")
?EpiFunc::age_sex_pyramid()
examples(EpiFunc::age_sex_pyramid())
# set dummy data
set.seed(5)
data = data.frame(sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
status = sample(c("Confirmed", "Probable"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
# age sex pyramid
age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex", split.by = NULL)
# set dummy data
set.seed(5)
data = data.frame(sex = sample(c("Male", "Female", "Unknown"), 200, replace = TRUE),
age = sample(c(NA, 1:100), 200, replace = TRUE),
status = sample(c("Confirmed", "Probable"), 200, replace = TRUE))
data$age.grp = cut(as.numeric(data$age), breaks = c(0, 6, 16, 26, 46, 66, Inf),
include.lowest = TRUE)
# age sex pyramid
EpiFunc::age_sex_pyramid(data, age.grp.col = "age.grp", sex.col = "sex", split.by = NULL)
install.packages("httr")
httr::set_config(httr::config(ssl_verifypeer =0L))
devtools::install_github("DanielGardiner/EpiFunc")
?EpiFunc::age_sex_pyramid()
library(EpiFunc)
?EpiFunc::age_sex_pyramid()
install.packages("httr")
httr::set_config(httr::config(ssl_verifypeer =0L))
devtools::install_github("DanielGardiner/EpiFunc")
devtools::install_github("DanielGardiner/EpiFunc")
?EpiFunc::age_sex_pyramid()
install.packages("testthat")
devtools::test()
devtools::check()
devtools::create()
sessionInfo()
version
RStudio.Version()
roxygenize()
roxygen2::roxygenize
roxygen2::roxygenize()
